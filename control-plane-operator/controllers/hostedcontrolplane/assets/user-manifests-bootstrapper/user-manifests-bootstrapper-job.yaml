apiVersion: batch/v1
kind: Job
metadata:
  name: manifests-bootstrapper
spec:
  template:
    spec:
      tolerations:
        - key: "multi-az-worker"
          operator: "Equal"
          value: "true"
          effect: NoSchedule
      containers:
        - image: {{ imageFor "cli" }}
          imagePullPolicy: IfNotPresent
          name: bootstrapper
          workingDir: /work
          command:
            - /bin/bash
          args:
            - -c
            - |-
              #!/bin/bash
              set -eu
              for name in $(oc get cm | grep '^user-manifest-' | awk '{ print $1 }'); do
                 oc get cm ${name} -o jsonpath='{ .data.data }' > "${name}.yaml"
              done
              export KUBECONFIG=/etc/openshift/kubeconfig
              oc apply -f $(pwd)
              # Replace the global certs configmap here because it's too large to oc apply
              oc create configmap -n openshift-controller-manager openshift-global-ca --from-file ca-bundle.crt=/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem --dry-run -o yaml > /tmp/openshift-global-ca
              oc replace -n openshift-controller-manager -f /tmp/openshift-global-ca --force
          volumeMounts:
            - mountPath: /etc/openshift
              name: kubeconfig
              readOnly: true
            - mountPath: /work
              name: work
      restartPolicy: OnFailure
      serviceAccountName: user-manifests-bootstrapper
      volumes:
        - name: kubeconfig
          secret:
            secretName: service-network-admin-kubeconfig
        - name: work
          emptyDir: {}
